//
//  HomeRouter.swift
//  SleepTimer
//
//  Created by Petrov Anton on 15.06.2020.
//  Copyright Â© 2020 APM. All rights reserved.
//
//  This file was generated by the MVVM Core Xcode template
//

import UIKit

protocol HomeRouterProtocol {
  
}

class HomeRouter: HomeRouterProtocol {
  
  enum Context {
    case setup
  }
  
  weak var baseViewController: UIViewController?
  
  func present(on baseVC: UIViewController, animated: Bool, context: Any?, completion: ((Bool) -> Void)?) {
    guard let context = context as? Context else { return }
    baseViewController = baseVC
    
    switch context {
    case .setup:
      let viewController = HomeConfigurator.default(router: self)
      baseVC.navigationController?.pushViewController(viewController, animated: true)
    }
    
  }
  
  func route(with context: Any?, animated: Bool, completion: ((Bool) -> Void)?) {
    //    guard let context = context as? Context else { return }
    //    guard let baseViewController = baseViewController else { return }
    
    // TODO: exemple how to do route to some next module
    //    let context = SomeRouter.Context.someContext
    //    let someRouter = SomeRouter()
    //    someRouter.present(on: baseViewController, animated: true, context: context)
  }
  
  func dismiss(animated: Bool, context: Any?, completion: ((Bool) -> Void)?) {
    
  }
  
}
