//
//  HomeViewModel.swift
//  SleepTimer
//
//  Created by Petrov Anton on 15.06.2020.
//  Copyright Â© 2020 APM. All rights reserved.
//
//  This file was generated by the MVVM Core Xcode template
//

import Foundation

protocol HomeViewModelInput {
  func openSoundTimerOptions()
  func openRecordingDurationOptions()
  func didSelectHomeButton()
}

protocol HomeViewModelOutput {
  var appState: Observable<String> { get }
  var homeButtonState: Observable<String> { get }
  var reloadRows: ObservableEmpty { get }
  var rows: [HomeRows] { get }
}

protocol HomeViewModelProtocol: HomeViewModelInput, HomeViewModelOutput  { }

class HomeViewModel: HomeViewModelProtocol {
  
  var router: HomeRouterProtocol
  
  init(router: HomeRouterProtocol) {
    self.router = router
  }
  
  // MARK: MoviesListViewModelOutput
  
  var reloadRows = ObservableEmpty()
  
  var rows: [HomeRows] = {
    let defaultSoundTimer = SoundTimerOption.default
    let defaultRecordingDuration = RecordingDurationOption.default
    return [HomeRows.soundTimer(value: defaultSoundTimer.prettyValue),
            HomeRows.recordingDuration(value: defaultRecordingDuration.prettyValue)]
  }()
  
  var appState: Observable<String> = {
    return Observable(HomeAppState.idle.prettyValue)
  }()
  
  var homeButtonState: Observable<String> = {
    Observable(HomeButtomState.play.prettyValue)
  }()
  
  // MARK: MoviesListViewModelInput
  
  func openSoundTimerOptions() {
    
  }
  
  func openRecordingDurationOptions() {
    
  }
  
  func didSelectHomeButton() {
    
  }
}

// MARK: - Private

private typealias Private = HomeViewModel
private extension Private {
  
}

